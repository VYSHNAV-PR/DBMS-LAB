                                   ASSIGNMENT 3 NOSQL-CRUD
                                 --------------------------


1.      Write a MongoDB query to create an INVOICE database and collections (CUSTOMER, PRODUCT) and its corresponding documents.



> use INVOICE
switched to db INVOICE
> db.createCollection("CUSTOMER")
{ "ok" : 1 }
> db.createCollection("PRODUCT")
{ "ok" : 1 }
> show collections
CUSTOMER
PRODUCT
> db.CUSTOMER.insert({name
... :"hari".age:"22",place:"palakkad",ph_no:"8156850040"})
uncaught exception: SyntaxError: missing } after property list :
@(shell):2:11
> db.CUSTOMER.insert({name :"hari".age:"22",place:"palakkad",ph_no:"8156850040"})
uncaught exception: SyntaxError: missing } after property list :
@(shell):1:36
> db.CUSTOMER.insert({name :"hari",age:"22",place:"palakkad",ph_no:"8156850040"})
WriteResult({ "nInserted" : 1 })
> db.CUSTOMER.insert({name :"vyshnav",age:"22",place:"malappuram",ph_no:"9645546800"})
WriteResult({ "nInserted" : 1 })
> db.CUSTOMER.insert({name :"hiba",age:"24",place:"ernakulam",ph_no:"9048018588"})
WriteResult({ "nInserted" : 1 })
> db.CUSTOMER.insert({name :"antappan",age:"55",place:"trivandrum",ph_no:"7934567810"})
WriteResult({ "nInserted" : 1 })
> db.CUSTOMER.insert({name :"Gopal",age:"60",place:"calicut",ph_no:"9056234589"})

> db.PRODUCT.insert({pname:"Ashirvad atta",price:"155"})
WriteResult({ "nInserted" : 1 })
> db.PRODUCT.insert({pname:"Lays",price:"50"})
WriteResult({ "nInserted" : 1 })
> db.PRODUCT.insert({pname:"Dairy Milk",price:"85"})
WriteResult({ "nInserted" : 1 })
> db.PRODUCT.insert({pname:"Onion",price:"100"})
WriteResult({ "nInserted" : 1 })
> db.PRODUCT.insert({pname:"Book",price:"40"})
WriteResult({ "nInserted" : 1 })

----------------------------------------------------------------------------------------------

2.      Write a MongoDB query to find all documents from the collection CUSTOMER


 > db.CUSTOMER.find().pretty()
{
	"_id" : ObjectId("648170bc410f750bf8c01f83"),
	"name" : "hari",
	"age" : "22",
	"place" : "palakkad",
	"ph_no" : "8156850040"
}
{
	"_id" : ObjectId("648170e9410f750bf8c01f84"),
	"name" : "vyshnav",
	"age" : "22",
	"place" : "malappuram",
	"ph_no" : "9645546800"
}
{
	"_id" : ObjectId("6481711a410f750bf8c01f85"),
	"name" : "hiba",
	"age" : "24",
	"place" : "ernakulam",
	"ph_no" : "9048018588"
}
{
	"_id" : ObjectId("64817164410f750bf8c01f86"),
	"name" : "antappan",
	"age" : "55",
	"place" : "trivandrum",
	"ph_no" : "7934567810"
}
{
	"_id" : ObjectId("648171c8410f750bf8c01f87"),
	"name" : "Gopal",
	"age" : "60",
	"place" : "calicut",
	"ph_no" : "9056234589"
}

----------------------------------------------------------------------------------------------------------

3.      Write a MongoDB query to update the city in the collection CUSTOMER.



 > db.CUSTOMER.update({"place":"malappuram"},{$set:{"place":"Kochi"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.CUSTOMER.find()
{ "_id" : ObjectId("648170bc410f750bf8c01f83"), "name" : "hari", "age" : "22", "place" : "palakkad", "ph_no" : "8156850040" }
{ "_id" : ObjectId("648170e9410f750bf8c01f84"), "name" : "vyshnav", "age" : "22", "place" : "Kochi", "ph_no" : "9645546800" }
{ "_id" : ObjectId("6481711a410f750bf8c01f85"), "name" : "hiba", "age" : "24", "place" : "ernakulam", "ph_no" : "9048018588" }
{ "_id" : ObjectId("64817164410f750bf8c01f86"), "name" : "antappan", "age" : "55", "place" : "trivandrum", "ph_no" : "7934567810" }
{ "_id" : ObjectId("648171c8410f750bf8c01f87"), "name" : "Gopal", "age" : "60", "place" : "calicut", "ph_no" : "9056234589" }
> 
-------------------------------------------------------------------------------------------------------------------

4.      Write a MongoDB query to delete the first matched document whose city is “Calicut”.


> db.CUSTOMER.deleteOne({"place":"calicut"})
{ "acknowledged" : true, "deletedCount" : 1 }
> db.CUSTOMER.find()
{ "_id" : ObjectId("648170bc410f750bf8c01f83"), "name" : "hari", "age" : "22", "place" : "palakkad", "ph_no" : "8156850040" }
{ "_id" : ObjectId("648170e9410f750bf8c01f84"), "name" : "vyshnav", "age" : "22", "place" : "Kochi", "ph_no" : "9645546800" }
{ "_id" : ObjectId("6481711a410f750bf8c01f85"), "name" : "hiba", "age" : "24", "place" : "ernakulam", "ph_no" : "9048018588" }
{ "_id" : ObjectId("64817164410f750bf8c01f86"), "name" : "antappan", "age" : "55", "place" : "trivandrum", "ph_no" : "7934567810" }
> 
//COMPLETED
//VERIFIED
